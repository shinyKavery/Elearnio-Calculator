{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiny\\\\Documents\\\\Elearnio Coding challenge\\\\elearnio\\\\src\\\\components\\\\Calculator.js\",\n  _s = $RefreshSig$();\nimport classes from './Calculator.module.css';\nimport { FormGroup, Label, Button } from \"reactstrap\";\nimport { useState } from 'react';\nimport refreshIcon from '../assets/img/refresh-icon.png';\nimport CalculatorImage from '../assets/img/calculator image.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [enteredNumber, setenteredNumber] = useState([]);\n  const [resultValue, setresultValue] = useState('');\n  const changeExpressionHandler = evt => {\n    setenteredNumber(evt.target.value);\n  };\n  const evaluateExpressionHandler = event => {\n    event.preventDefault();\n    let tasks = [];\n    tasks.push(enteredNumber);\n    const x = evalRpn(JSON.parse(tasks));\n    setresultValue(x);\n  };\n  const reloadAppHandler = () => {\n    setenteredNumber([]);\n    setresultValue('');\n  };\n  const evalRpn = A => {\n    let st = [];\n    for (const element of A) {\n      if (element !== \"+\" && element !== \"-\" && element !== \"/\" && element !== \"*\") {\n        st.push(parseFloat(element));\n      } else {\n        let b = parseFloat(st.pop());\n        let a = parseFloat(st.pop());\n        if (element === \"+\") st.push(a + b);else if (element === \"-\") st.push(a - b);else if (element === \"*\") st.push(a * b);else st.push(parseInt(a / b));\n      }\n    }\n    if (st.length === 0) {\n      console.log(st);\n      alert(\"boom\");\n    }\n    return parseFloat(st[st.length - 1]).toFixed(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.profile,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: CalculatorImage,\n      height: \"80px\",\n      width: \"80px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"exampleEmail\",\n        style: {\n          fontWeight: \"600\",\n          size: \"14px\"\n        },\n        children: \"Enter an arithmetic expression in a Reverse Polish Notation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.input,\n        style: {\n          fontSize: \"12px\"\n        },\n        placeholder: \"Enter an arithmetic expression in a Reverse Polish Notation\",\n        value: enteredNumber,\n        onChange: changeExpressionHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this), resultValue !== '' && /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"exampleEmail\",\n        style: {\n          fontWeight: \"600\",\n          size: \"14px\"\n        },\n        children: \"The result of the above expression is:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: resultValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        marginLeft: '250px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: evaluateExpressionHandler,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: refreshIcon,\n        alt: \"refreshIcon\",\n        width: \"50px\",\n        height: \"50px\",\n        onClick: reloadAppHandler,\n        title: \"reload calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"KhpFdZC1IQ1wwr3OTgXxjxVpzNk=\");\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["classes","FormGroup","Label","Button","useState","refreshIcon","CalculatorImage","UserProfile","enteredNumber","setenteredNumber","resultValue","setresultValue","changeExpressionHandler","evt","target","value","evaluateExpressionHandler","event","preventDefault","tasks","push","x","evalRpn","JSON","parse","reloadAppHandler","A","st","element","parseFloat","b","pop","a","parseInt","length","console","log","alert","toFixed","profile","fontWeight","size","input","fontSize","display","marginLeft"],"sources":["C:/Users/shiny/Documents/Elearnio Coding challenge/elearnio/src/components/Calculator.js"],"sourcesContent":["import classes from './Calculator.module.css';\r\nimport { FormGroup, Label,Button } from \"reactstrap\";\r\nimport { useState } from 'react';\r\nimport refreshIcon from '../assets/img/refresh-icon.png';\r\nimport CalculatorImage from '../assets/img/calculator image.png';\r\nconst UserProfile = () => {\r\n  const [enteredNumber, setenteredNumber] = useState([]);\r\n  const [resultValue, setresultValue] = useState('');\r\n  const changeExpressionHandler = (evt)=>{\r\nsetenteredNumber(evt.target.value);\r\n  }\r\nconst evaluateExpressionHandler =(event)=>{\r\n  event.preventDefault();\r\n  \r\n  let tasks = []\r\ntasks.push(enteredNumber);\r\n const x =evalRpn(JSON.parse(tasks));\r\n setresultValue(x);\r\n}\r\nconst reloadAppHandler = ()=>{\r\n  setenteredNumber([]);\r\n  setresultValue('');\r\n}\r\nconst evalRpn =(A)=>\r\n{\r\n    let st = [];\r\n   \r\n    for (const element of A)\r\n    {\r\n     \r\n        \r\n        if (element !== \"+\" && element !== \"-\" && element !== \"/\"\r\n            && element !== \"*\") {\r\n            st.push(parseFloat(element));\r\n            \r\n        }\r\n       \r\n       \r\n        else {\r\n            let b = parseFloat(st.pop());\r\n            let a = parseFloat(st.pop());\r\n            if (element === \"+\")\r\n                st.push(a + b);\r\n            else if (element === \"-\")\r\n                st.push(a - b);\r\n            else if (element === \"*\")\r\n                st.push(a * b);\r\n            else\r\n                st.push(parseInt(a / b));\r\n        }\r\n    }\r\n  if(st.length === 0){\r\n    console.log(st)\r\n    alert (\"boom\");\r\n  }\r\n    return parseFloat(st[st.length-1]).toFixed(1);\r\n}\r\n\r\n\r\n  \r\n  return (\r\n    <main className={classes.profile}>\r\n      <h2>My Calculator</h2>\r\n      \r\n      <img src={CalculatorImage} height='80px' width='80px'/>\r\n      <br/>\r\n      <FormGroup>\r\n              <Label\r\n                for=\"exampleEmail\"\r\n                style={{ fontWeight: \"600\", size: \"14px\" }}\r\n              >\r\n                Enter an arithmetic expression in a Reverse Polish Notation:\r\n              </Label>\r\n              <input\r\n             className={classes.input}\r\n                style={{ fontSize: \"12px\" }}\r\n                placeholder=\"Enter an arithmetic expression in a Reverse Polish Notation\"\r\n                 value={enteredNumber}\r\n                onChange={changeExpressionHandler}\r\n               \r\n              />\r\n              \r\n            </FormGroup>\r\n\r\n           <br/>\r\n          {resultValue !== '' &&  <FormGroup>\r\n              <Label\r\n                for=\"exampleEmail\"\r\n                style={{ fontWeight: \"600\", size: \"14px\" }}\r\n              >\r\n              The result of the above expression is:\r\n              </Label>\r\n             <h3>{resultValue}</h3>\r\n              \r\n            </FormGroup>}\r\n            <div style={{display:'flex',marginLeft:'250px'}}>\r\n\r\n            \r\n            <Button onClick={evaluateExpressionHandler}>Calculate</Button>\r\n            &nbsp;&nbsp;\r\n           \r\n                   <img src={refreshIcon} alt='refreshIcon' width='50px' height='50px' onClick={reloadAppHandler} title='reload calculator'/>\r\n                   </div>      \r\n\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}