{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiny\\\\Documents\\\\Elearnio Coding challenge\\\\elearnio\\\\src\\\\components\\\\Calculator.js\",\n  _s = $RefreshSig$();\nimport classes from './Calculator.module.css';\nimport { Form, FormGroup, Label, Button } from \"reactstrap\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [enteredNumber, setenteredNumber] = useState([]);\n  const evaluateExpressionHandler = event => {\n    event.preventDefault();\n    console.log(typeof enteredNumber);\n    let enteredArray = [...enteredNumber];\n    evalRPN(enteredNumber);\n  };\n  var evalRPN = function (tokens) {\n    let set = new Set();\n    set.add('+');\n    set.add('-');\n    set.add('/');\n    set.add('*');\n    let i = 0;\n    while (tokens.length > 1) {\n      if (set.has(tokens[i + 2])) {\n        const result = calculate(parseInt(tokens[i]), parseInt(tokens[i + 1]), tokens[i + 2]);\n        tokens.splice(i, 3, result);\n        i = 0;\n      } else i++;\n    }\n    return tokens[0];\n  };\n  const calculate = (left, right, operator) => {\n    let res;\n    switch (operator) {\n      case '+':\n        res = left + right;\n        break;\n      case '-':\n        res = left - right;\n        break;\n      case '*':\n        res = left * right;\n        break;\n      case '/':\n        res = left / right;\n        break;\n    }\n    console.log(res);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.profile,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"exampleEmail\",\n        style: {\n          fontWeight: \"600\",\n          size: \"14px\"\n        },\n        children: \"Enter a number or an expression:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.input,\n        style: {\n          fontSize: \"12px\"\n        },\n        placeholder: \"Enter a number or expression\",\n        value: enteredNumber,\n        onChange: evt => {\n          setenteredNumber(evt.target.value);\n        }\n        // onBlur={this.checkEmail}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: evaluateExpressionHandler,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"qkVlIsslV+7UyPKPrvQ5Fdhcmcg=\");\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["classes","Form","FormGroup","Label","Button","useState","UserProfile","enteredNumber","setenteredNumber","evaluateExpressionHandler","event","preventDefault","console","log","enteredArray","evalRPN","tokens","set","Set","add","i","length","has","result","calculate","parseInt","splice","left","right","operator","res","profile","fontWeight","size","input","fontSize","evt","target","value"],"sources":["C:/Users/shiny/Documents/Elearnio Coding challenge/elearnio/src/components/Calculator.js"],"sourcesContent":["import classes from './Calculator.module.css';\r\nimport { Form, FormGroup, Label,Button } from \"reactstrap\";\r\nimport { useState } from 'react';\r\nconst UserProfile = () => {\r\n  const [enteredNumber, setenteredNumber] = useState([]);\r\nconst evaluateExpressionHandler =(event)=>{\r\n  event.preventDefault();\r\n  console.log(typeof enteredNumber);\r\n  let enteredArray = [...enteredNumber]\r\n  evalRPN(enteredNumber);\r\n}\r\nvar evalRPN = function(tokens) {\r\n  let set = new Set();\r\n  set.add('+');\r\n  set.add('-');\r\n  set.add('/');\r\n  set.add('*');\r\n  \r\n  let i = 0;\r\n  while(tokens.length > 1) {\r\n      if(set.has(tokens[i+2])) {\r\n          const result = calculate(parseInt(tokens[i]), parseInt(tokens[i+1]), tokens[i+2]);\r\n          tokens.splice(i, 3, result);\r\n          i = 0;\r\n      } else\r\n          i++;\r\n  }\r\n  \r\n  return tokens[0];\r\n};\r\n  \r\nconst calculate = (left, right, operator) => {\r\n  let res;\r\n  switch(operator) {\r\n      case '+':\r\n          res = left + right;\r\n          break;\r\n      case '-':\r\n          res = left - right;\r\n          break;\r\n      case '*':\r\n          res = left * right;\r\n          break;\r\n      case '/':\r\n          res = left / right;\r\n          break;\r\n  }\r\nconsole.log(res);\r\n}\r\n  \r\n  return (\r\n    <main className={classes.profile}>\r\n      <h2>My Calculator</h2>\r\n      <FormGroup>\r\n              <Label\r\n                for=\"exampleEmail\"\r\n                style={{ fontWeight: \"600\", size: \"14px\" }}\r\n              >\r\n                Enter a number or an expression:\r\n              </Label>\r\n              <input\r\n             className={classes.input}\r\n                style={{ fontSize: \"12px\" }}\r\n                placeholder=\"Enter a number or expression\"\r\n                 value={enteredNumber}\r\n                onChange={(evt)=>{setenteredNumber(evt.target.value)}}\r\n                // onBlur={this.checkEmail}\r\n              />\r\n              \r\n            </FormGroup>\r\n           <br/>\r\n            <Button onClick={evaluateExpressionHandler}>Calculate</Button>\r\n            \r\n\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,yBAAyB;AAC7C,SAASC,IAAI,EAAEC,SAAS,EAAEC,KAAK,EAACC,MAAM,QAAQ,YAAY;AAC1D,SAASC,QAAQ,QAAQ,OAAO;AAAC;AACjC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMI,yBAAyB,GAAGC,KAAK,IAAG;IACxCA,KAAK,CAACC,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,OAAON,aAAa,CAAC;IACjC,IAAIO,YAAY,GAAG,CAAC,GAAGP,aAAa,CAAC;IACrCQ,OAAO,CAACR,aAAa,CAAC;EACxB,CAAC;EACD,IAAIQ,OAAO,GAAG,UAASC,MAAM,EAAE;IAC7B,IAAIC,GAAG,GAAG,IAAIC,GAAG,EAAE;IACnBD,GAAG,CAACE,GAAG,CAAC,GAAG,CAAC;IACZF,GAAG,CAACE,GAAG,CAAC,GAAG,CAAC;IACZF,GAAG,CAACE,GAAG,CAAC,GAAG,CAAC;IACZF,GAAG,CAACE,GAAG,CAAC,GAAG,CAAC;IAEZ,IAAIC,CAAC,GAAG,CAAC;IACT,OAAMJ,MAAM,CAACK,MAAM,GAAG,CAAC,EAAE;MACrB,IAAGJ,GAAG,CAACK,GAAG,CAACN,MAAM,CAACI,CAAC,GAAC,CAAC,CAAC,CAAC,EAAE;QACrB,MAAMG,MAAM,GAAGC,SAAS,CAACC,QAAQ,CAACT,MAAM,CAACI,CAAC,CAAC,CAAC,EAAEK,QAAQ,CAACT,MAAM,CAACI,CAAC,GAAC,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAACI,CAAC,GAAC,CAAC,CAAC,CAAC;QACjFJ,MAAM,CAACU,MAAM,CAACN,CAAC,EAAE,CAAC,EAAEG,MAAM,CAAC;QAC3BH,CAAC,GAAG,CAAC;MACT,CAAC,MACGA,CAAC,EAAE;IACX;IAEA,OAAOJ,MAAM,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,MAAMQ,SAAS,GAAG,CAACG,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAC3C,IAAIC,GAAG;IACP,QAAOD,QAAQ;MACX,KAAK,GAAG;QACJC,GAAG,GAAGH,IAAI,GAAGC,KAAK;QAClB;MACJ,KAAK,GAAG;QACJE,GAAG,GAAGH,IAAI,GAAGC,KAAK;QAClB;MACJ,KAAK,GAAG;QACJE,GAAG,GAAGH,IAAI,GAAGC,KAAK;QAClB;MACJ,KAAK,GAAG;QACJE,GAAG,GAAGH,IAAI,GAAGC,KAAK;QAClB;IAAM;IAEhBhB,OAAO,CAACC,GAAG,CAACiB,GAAG,CAAC;EAChB,CAAC;EAEC,oBACE;IAAM,SAAS,EAAE9B,OAAO,CAAC+B,OAAQ;IAAA,wBAC/B;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB,QAAC,SAAS;MAAA,wBACF,QAAC,KAAK;QACJ,GAAG,EAAC,cAAc;QAClB,KAAK,EAAE;UAAEC,UAAU,EAAE,KAAK;UAAEC,IAAI,EAAE;QAAO,CAAE;QAAA,UAC5C;MAED;QAAA;QAAA;QAAA;MAAA,QAAQ,eACR;QACD,SAAS,EAAEjC,OAAO,CAACkC,KAAM;QACtB,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAC5B,WAAW,EAAC,8BAA8B;QACzC,KAAK,EAAE5B,aAAc;QACtB,QAAQ,EAAG6B,GAAG,IAAG;UAAC5B,gBAAgB,CAAC4B,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;QAAA;QACpD;MAAA;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEQ,eACb;MAAA;MAAA;MAAA;IAAA,QAAK,eACJ,QAAC,MAAM;MAAC,OAAO,EAAE7B,yBAA0B;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAG/D;AAEX,CAAC;AAAC,GAzEIH,WAAW;AAAA,KAAXA,WAAW;AA2EjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}