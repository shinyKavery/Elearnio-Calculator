{"ast":null,"code":"import { createStore } from 'redux';\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: false\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    }\n  }\n});\nconst initialAuthenticationStatus = {\n  isLoggedIn: false\n};\nconst authSlice = createSlice({\n  name: 'Authentication',\n  initialAuthenticationStatus,\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    logout(state) {\n      state.isLoggedIn = false;\n    }\n  }\n});\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0,\n    showCounter: false\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'INCREASE') {\n    return {\n      counter: state.counter + action.payload,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'DECREASE') {\n    return {\n      counter: state.counter - action.payload,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'TOGGLE') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nauth.actions;\nconst Store = configureStore({\n  reducer: {\n    auth: authSlice.reducer\n  }\n});\nexport default Store;","map":{"version":3,"names":["createStore","configureStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","initialAuthenticationStatus","isLoggedIn","authSlice","login","logout","counterReducer","type","auth","actions","Store","reducer"],"sources":["C:/Users/shiny/Documents/Elearnio Coding challenge/elearnio/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\r\nimport {configureStore, createSlice} from '@reduxjs/toolkit'\r\nconst initialState = {counter:0,showCounter:false}\r\nconst counterSlice = createSlice({\r\n    name:'counter',\r\n    initialState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++\r\n        },\r\n        decrement(state){\r\n            state.counter--\r\n        },\r\n        increase(state,action){\r\n           state.counter =state.counter + action.payload\r\n        }\r\n    }\r\n})\r\nconst initialAuthenticationStatus = {isLoggedIn:false}\r\nconst authSlice = createSlice({\r\n    name:'Authentication',\r\n    initialAuthenticationStatus,\r\n    reducers:{\r\nlogin(state){\r\n    state.isLoggedIn = true\r\n},\r\nlogout(state){\r\n    state.isLoggedIn = false\r\n}\r\n    }\r\n})\r\nconst counterReducer = (state={counter:0,showCounter:false},action)=>{\r\nif(action.type==='increment'){\r\n   return {\r\n       counter:state.counter + 1,\r\n       showCounter:state.showCounter\r\n   }\r\n   \r\n}\r\nif(action.type==='decrement'){\r\n   return {\r\n       counter:state.counter - 1,\r\n       showCounter:state.showCounter\r\n   }\r\n   \r\n}\r\nif(action.type==='INCREASE'){\r\n   return { \r\n       counter:state.counter+action.payload,\r\n       showCounter:state.showCounter\r\n   }\r\n   \r\n}\r\nif(action.type==='DECREASE'){\r\n   return { \r\n       counter:state.counter-action.payload,\r\n       showCounter:state.showCounter\r\n   }\r\n}\r\nif(action.type==='TOGGLE'){\r\n   return {\r\n       counter: state.counter,\r\n       showCounter: !state.showCounter\r\n   }\r\n}\r\nreturn state;\r\n}\r\nauth.actions\r\nconst Store = configureStore({reducer:{\r\n    auth: authSlice.reducer\r\n}});\r\nexport default Store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAAQC,cAAc,EAAEC,WAAW,QAAO,kBAAkB;AAC5D,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAC,CAAC;EAACC,WAAW,EAAC;AAAK,CAAC;AAClD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAC,SAAS;EACdJ,YAAY;EACZK,QAAQ,EAAC;IACLC,SAAS,CAACC,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAAS,CAACD,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQ,CAACF,KAAK,EAACG,MAAM,EAAC;MACnBH,KAAK,CAACN,OAAO,GAAEM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChD;EACJ;AACJ,CAAC,CAAC;AACF,MAAMC,2BAA2B,GAAG;EAACC,UAAU,EAAC;AAAK,CAAC;AACtD,MAAMC,SAAS,GAAGf,WAAW,CAAC;EAC1BK,IAAI,EAAC,gBAAgB;EACrBQ,2BAA2B;EAC3BP,QAAQ,EAAC;IACbU,KAAK,CAACR,KAAK,EAAC;MACRA,KAAK,CAACM,UAAU,GAAG,IAAI;IAC3B,CAAC;IACDG,MAAM,CAACT,KAAK,EAAC;MACTA,KAAK,CAACM,UAAU,GAAG,KAAK;IAC5B;EACI;AACJ,CAAC,CAAC;AACF,MAAMI,cAAc,GAAG,YAA8C;EAAA,IAA7CV,KAAK,uEAAC;IAACN,OAAO,EAAC,CAAC;IAACC,WAAW,EAAC;EAAK,CAAC;EAAA,IAACQ,MAAM;EAClE,IAAGA,MAAM,CAACQ,IAAI,KAAG,WAAW,EAAC;IAC1B,OAAO;MACHjB,OAAO,EAACM,KAAK,CAACN,OAAO,GAAG,CAAC;MACzBC,WAAW,EAACK,KAAK,CAACL;IACtB,CAAC;EAEJ;EACA,IAAGQ,MAAM,CAACQ,IAAI,KAAG,WAAW,EAAC;IAC1B,OAAO;MACHjB,OAAO,EAACM,KAAK,CAACN,OAAO,GAAG,CAAC;MACzBC,WAAW,EAACK,KAAK,CAACL;IACtB,CAAC;EAEJ;EACA,IAAGQ,MAAM,CAACQ,IAAI,KAAG,UAAU,EAAC;IACzB,OAAO;MACHjB,OAAO,EAACM,KAAK,CAACN,OAAO,GAACS,MAAM,CAACC,OAAO;MACpCT,WAAW,EAACK,KAAK,CAACL;IACtB,CAAC;EAEJ;EACA,IAAGQ,MAAM,CAACQ,IAAI,KAAG,UAAU,EAAC;IACzB,OAAO;MACHjB,OAAO,EAACM,KAAK,CAACN,OAAO,GAACS,MAAM,CAACC,OAAO;MACpCT,WAAW,EAACK,KAAK,CAACL;IACtB,CAAC;EACJ;EACA,IAAGQ,MAAM,CAACQ,IAAI,KAAG,QAAQ,EAAC;IACvB,OAAO;MACHjB,OAAO,EAAEM,KAAK,CAACN,OAAO;MACtBC,WAAW,EAAE,CAACK,KAAK,CAACL;IACxB,CAAC;EACJ;EACA,OAAOK,KAAK;AACZ,CAAC;AACDY,IAAI,CAACC,OAAO;AACZ,MAAMC,KAAK,GAAGvB,cAAc,CAAC;EAACwB,OAAO,EAAC;IAClCH,IAAI,EAAEL,SAAS,CAACQ;EACpB;AAAC,CAAC,CAAC;AACH,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}